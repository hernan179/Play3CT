pipeline {
   agent any
    tools {
        maven 'maven3.8.8'
        //jfrog 'artifactory-test'
    }


    stages {
        stage('Build'){
            steps {
                echo 'Witout Checkout form jenkingsfile-hernan, implicited was done.. skiptest';
                //git 'https://github.com/hernan179/Play3CT.git'
                sh 'mvn clean install -DskipTests -B -ntp'
                echo '======================= ansible local ==============='
                sh "set" 
                   echo "${env.JOB_BASE_NAME}";

            }
        }
         stage('artifactory'){
            steps {
                 script {
                     echo '------------------------set-----------------------';

                    
                    sh 'env | sort'
                    echo '----------STAGE_NAME----------------------------';

                    //pom = readMavenPom file: 'pom.xml'
                    //pom.artifactId
                    //pom.version

                    def pom = readMavenPom file: 'pom.xml'
                    //println pom

                 

                    def version = pom.version; //sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true
                    def artifactId = pom.artifactId; //sh script: 'mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout', returnStdout: true

        
                    
                    def server = Artifactory.server 'artifactory-test'
                    def repository = artifactId;
                    def empack = pom.packaging;
                    
                    echo 'Deploy to properties ';
                                    
                
                    echo 'version of '+version
                    echo 'artifactId '+artifactId 
                    echo "_GIT_BRANCH "+env.GIT_BRANCH;


   
                    if(env.GIT_BRANCH == 'origin/master'){
                        repository = repository + '-PROD'
                    }else{
                         repository = repository + '-DEV'
                    }
                    
                    echo 'DESTINATION TO REPOSITORY ' + repository;
                    echo 'DESTINATION PROJECT       ' + artifactId;
                    echo 'DESTINATION VERSION       ' + version;
                    echo 'DESTINATION FULL PATH  artifactoryUrl    '+server.url+'/'+repository+'/'+artifactId+'-'+version+'.'+empack;
                    def uploadSpec = """
                        {
                            "files": [
                                {
                                    "pattern": "target/.*.war",
                                    "target": "$repository",
                                    "regexp": "true"
                                }
                            ]
                        }
                    """
                  
                    server.upload spec: uploadSpec
                 }
            }
        }

        stage('Deploy'){
            /*agent {
                docker {
                    image 'quay.io/ansible/ansible-runner:stable-2.12-latest'
                    args '-u root'
                }
            }*/
          
            steps {

             echo '======================= ansible Docker aws ==============='
             sh 'ansible --version'
             sh 'env | sort'
             echo '============looking for a jboss-private-key ============='
             sshagent (credentials: ['jboss-private-key']) {
           

             echo 'step one Execute command on ubutu install jboss'
             sh 'ansible-inventory -i hosts --list -y'
             echo 'step two Execute command on ubutu install jboss'
             sh 'ansible-playbook -i hosts playbooks/server1_jboss.yml'
           

   
            //ssh "jboss-eap-7.4/bin/jboss-cli.sh --user=$JBOSS_CREDENTIALS_USR --password=$JBOSS_CREDENTIALS_PSW -c --command='undeploy applicationPetstore.war'"
            //sh 'cp -a /root/.jenkins/workspace/spring-petclinic-rest-final/target/spring-pet*.war /opt/jboss/jboss-eap-7.3/standalone/deployments/'
           }   
         }
        }
    }
}

